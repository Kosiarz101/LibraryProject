@model LibraryProject.Models.IndexViewModel
@{
    ViewBag.Title = "Zarządzaj";
}
@using Microsoft.AspNet.Identity
<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<ul class="nav nav-pills">
    <li id="home" role="presentation" class="active"><a href="#">Home</a></li>
    <li id="profile" role="presentation" class=""><a href="#">Profile</a></li>
    <li id="books" role="presentation" class=""><a href="#">Books</a></li>
    <li id="searchHistory" role="presentation" class=""><a href="#">Search History</a></li>
</ul>
<hr />
<div id="personalSettings" class="">
    <h4>Zmień ustawienia konta</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Hasło:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Zmień hasło", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Utwórz", "SetPassword")
            }
            ]
        </dd>
        <dt>Logowania zewnętrzne:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Zarządzaj", "ManageLogins") ]
        </dd>
        @*
            Numery telefonów mogą być używane jako drugi składnik w systemach uwierzytelniania dwuskładnikowego.

             Zobacz <a href="https://go.microsoft.com/fwlink/?LinkId=403804">ten artykuł</a>,
                        aby uzyskać szczegółowe informacje na temat konfigurowania tej aplikacji ASP.NET pod kątem obsługi uwierzytelniania dwuskładnikowego przy użyciu wiadomości SMS.

             Usuń komentarz z następującego bloku po skonfigurowaniu uwierzytelniania dwuskładnikowego
        *@
        @*
            <dt>Numer telefonu:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="Usuń" class="btn-link" />]</text>
                    }
                }
                else
                {
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
            </dd>
        *@
        <dt>Uwierzytelnianie dwuetapowe:</dt>
        <dd>
            <p>
                Nie skonfigurowano żadnych dostawców uwierzytelniania dwuskładnikowego. Zobacz <a href="https://go.microsoft.com/fwlink/?LinkId=403804">ten artykuł</a>,
                aby uzyskać szczegółowe informacje na temat konfigurowania tej aplikacji ASP.NET pod kątem obsługi uwierzytelniania dwuskładnikowego.
            </p>
            @*@if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Włączone
                        <input type="submit" value="Wyłącz" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Wyłączone
                        <input type="submit" value="Włącz" class="btn btn-link" />
                        </text>
                    }
                }*@
        </dd>
    </dl>
</div>
<div id="personalContent" class="display-none">
    <h4>Edit Personal Data</h4>
    <hr />
    @{Html.RenderAction("ChangeUserData", "Manage");}
    <hr />
    <h4>Change Password</h4>
    <hr />
    @{Html.RenderAction("ChangePassword", "Manage");}
</div>
<div id="searchContent" class="display-none">
    @{Html.RenderAction("Index", "Searches", new { id = User.Identity.GetUserId() });}
</div>
<div id="booksContent" class="display-none">
    <div class="row">
        <div class="col-sm-2">
            <ul class="nav nav-pills nav-stacked">
                <li id="BorrowedBook" role="presentation" class="active"><a href="#">Borrowed</a></li>
                <li id="AwaitedBook" role="presentation"><a href="#">Awaited</a></li>
                <li id="Archive" role="presentation"><a href="#">Archive</a></li>
                <li id="Queue" role="presentation"><a href="#">Queue</a></li>
            </ul>
        </div>
        <div class="col-sm-10">
            <div id="BorrowedBookContent" class="display-none">
                ...
            </div>
            <div id="AwaitedBookContent" class="display-none">
                @{Html.RenderAction("AwaitedBookList", "AwaitedBook", new { UserId = User.Identity.GetUserId() });}
            </div>
            <div id="ArchiveContent" class="display-none">

            </div>
            <div id="QueueContent" class="display-none">
                @{Html.RenderAction("QueueList", "Queue", new { UserId = User.Identity.GetUserId() });}
            </div>
        </div>
    </div>     
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

        function deactiveAll() {
            $("#home").removeClass('active');
            $("#profile").removeClass('active');
            $("#books").removeClass('active');
            $("#searchHistory").removeClass('active');
            $("#personalContent").addClass('display-none');
            $("#personalSettings").addClass('display-none');
            $("#booksContent").addClass('display-none');
            $("#searchContent").addClass('display-none');
        }

        function deactiveAllBooksContent() {
            $("#BorrowedBook").removeClass('active');
            $("#AwaitedBook").removeClass('active');
            $("#Archive").removeClass('active');
            $("#Queue").removeClass('active');
            $("#BorrowedBookContent").addClass('display-none');
            $("#AwaitedBookContent").addClass('display-none');
            $("#ArchiveContent").addClass('display-none');
            $("#QueueContent").addClass('display-none');
        }   
        debugger;
        $("#home").click(function () {
            deactiveAll();
            $("#home").addClass('active');
            $("#personalSettings").removeClass('display-none');
        });
        $("#profile").click(function () {
            deactiveAll();
            $("#profile").addClass('active');
            $("#personalContent").removeClass('display-none');
        });
        $("#books").click(function () {
            deactiveAll();
            $("#books").addClass('active');
            $("#booksContent").removeClass('display-none');
        });
        $("#searchHistory").click(function () {
            deactiveAll();
            $("#searchHistory").addClass('active');
            $("#searchContent").removeClass('display-none');
        });
        //BooksContent
        $("#BorrowedBook").click(function () {
            deactiveAllBooksContent();
            $("#BorrowedBook").addClass('active');
            $("#BorrowedBookContent").removeClass('display-none');
        });
        $("#AwaitedBook").click(function () {
            deactiveAllBooksContent();
            $("#AwaitedBook").addClass('active');
            $("#AwaitedBookContent").removeClass('display-none');
        });
        $("#Archive").click(function () {
            deactiveAllBooksContent();
            $("#Archive").addClass('active');
            $("#ArchiveContent").removeClass('display-none');
        });
        $("#Queue").click(function () {
            deactiveAllBooksContent();
            $("#Queue").addClass('active');
            $("#QueueContent").removeClass('display-none');
        });
    });
    </script>
}
