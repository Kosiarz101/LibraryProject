@model LibraryProject.Models.BookPageViewModel

@{
    ViewBag.Title = "Details";
}
@using Microsoft.AspNet.Identity

<h2>Details</h2>
<hr />
<div id="Message">

</div>
@if (User.IsInRole("Employee") || User.IsInRole("Admin"))
{
    <div class="panel panel-primary">
        <div class="panel-heading">Database Manipulation</div>
        <div class="panel-body">
            <div class="d-flex justify-content-between">
                @Html.ActionLink("Edit", "Edit", "Book", new { id = Model.Book.Id }, new { @Class = "btn btn-primary m-1" })
                @Html.ActionLink("Add Tag", "Create", "BookTag", new { id = Model.Book.Id }, new { @Class = "btn btn-primary m-1" })
                @Html.ActionLink("Delete Tag", "Delete", "BookTag", new { BookId = Model.Book.Id}, new { @Class = "btn btn-primary m-1" })
                @Html.ActionLink("Delete", "Delete", "Book", new { id = Model.Book.Id }, new { @Class = "btn btn-danger m-1" })
            </div>
        </div>
    </div>
}
<div>   
    <div class="row d-flex">
        <div class="col-sm-3">
            <h3>
                @Html.DisplayNameFor(model => model.Book.Title)
            </h3>
        </div>
        <div class="col-auto">
            <h3>
                @Html.DisplayFor(model => model.Book.Title)
            </h3>
        </div>
    </div>
    <div class="row d-flex">
        <div class="col-sm-3">
            <h3>
                @Html.DisplayNameFor(model => model.Book.Author)
            </h3>
        </div>
        <div class="col-auto">
            <h3>
                @Html.DisplayFor(model => model.Book.Author)
            </h3>
        </div>
    </div>
    <div class="row d-flex" style="color:gray; font-style:italic">
        <div class="col-sm-3">
            <h4>
                @Html.DisplayNameFor(model => model.Book.PublicationDate)
            </h4>
        </div>
        <div class="col-auto">
            <h4>
                @Model.Book.PublicationDate.ToString("dd MMMM yyyy")
            </h4>
        </div>
    </div>
    <div class="row d-flex">

        @if (Model.Book.Quantity == 0)
        {
            <div class="col-sm-3">
                <p style="color:red">Out of stock </p>
            </div>
            <div class="col-auto">
                @if (User.Identity.IsAuthenticated)
                {
                    @Ajax.ActionLink("Join a queue", "CreateAjax", "Queue", new { BookId = Model.Book.Id, UserId = User.Identity.GetUserId() }, new AjaxOptions
                    {
                         UpdateTargetId = "Message",
                         InsertionMode = InsertionMode.Replace,
                         HttpMethod = "POST" // <-- HTTP method
                    }
                    , new { @class = "btn btn-primary", @Id = "link" })
                }
                else
                {
                    <a style="display: inline;">You must be logged to join a queue. </a>
                }
            </div>
        }
        else
        {
            <div class="col-sm-3">
                <p style="color:green"> Book is available</p>
            </div>
            <div class="col-auto">
                @if (User.Identity.IsAuthenticated)
                {
                    @Ajax.ActionLink("Add to Cart", "AddToCart", new { Id = Model.Book.Id }, new AjaxOptions
                    {
                         UpdateTargetId = "Message",
                         InsertionMode = InsertionMode.Replace,
                         HttpMethod = "GET" // <-- HTTP method
                    }
                    , new { @class = "btn btn-primary", @Id = "link" })
                }
                else
                {
                    <a>You must be logged to borrow books</a>
                }
            </div>
        }
    </div>
    <div class="row">
        <div class="col-sm-12">
            <h3>
                @Html.DisplayNameFor(model => model.Book.Describtion)
            </h3>
        </div>
        <div class="col-auto">
            <p>
                @Html.DisplayFor(model => model.Book.Describtion)
            </p>
        </div>
    </div>
    @if (Model.Tags.Count > 0)
    {
        <div class="row">
            <div class="col-sm-12">
                <h4>Tags</h4>
                @foreach (var tag in Model.Tags)
                {
                    @Html.ActionLink(tag.Name, "TagSearch", "Tag", new { name = tag.Name }, new { @Class = "mx-2" })
                }
            </div>

        </div>
    }

</div>
<p class="my-2">
    @Html.ActionLink("Back to List", "Index")
</p>
@section Scripts
{
    <script src="@Url.Content("~/Scripts/ShoppingCart.js")"></script>
}
